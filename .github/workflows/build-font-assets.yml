name: Build Font Assets

on:
  push:
    paths:
      - 'libs/TextMesh Pro/**'
      - 'tools/**'
  workflow_dispatch:
    inputs:
      asset_version:
        description: 'Asset bundle version (e.g., 2025-05-12)'
        required: true
        default: '2025-05-12'

jobs:
  build-font-assets:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Prepare TMP Font Assets
      run: |
        $assetVersion = "${{ github.event.inputs.asset_version || '2025-05-12' }}"
        $outputPath = "dist/TMP_Font_AssetBundles_${assetVersion}.7z"
        $tempAssetsPath = "temp_assets"

        # Create output and temp directories
        New-Item -ItemType Directory -Force -Path "dist"
        New-Item -ItemType Directory -Force -Path $tempAssetsPath

        # Copy TMP assets to temp directory
        if (Test-Path "libs/TextMesh Pro") {
          Copy-Item "libs/TextMesh Pro/*" $tempAssetsPath -Recurse -ErrorAction SilentlyContinue
          Write-Host "Copied TMP assets to temp directory"
        } else {
          Write-Host "TextMesh Pro directory not found, creating placeholder"
          # Create a placeholder structure if TMP assets don't exist
          New-Item -ItemType Directory -Force -Path "$tempAssetsPath/Fonts"
          New-Item -ItemType Directory -Force -Path "$tempAssetsPath/Resources"
          "# TMP Font Assets Placeholder`nThis file contains placeholder content for TextMesh Pro font assets.`nPlease replace with actual TMP font files." | Out-File -FilePath "$tempAssetsPath/README.txt"
        }

        # Copy any additional font-related files from the project
        Get-ChildItem -Path "src" -Recurse -Include "*.ttf","*.otf","*.fontsettings" -ErrorAction SilentlyContinue | ForEach-Object {
          Copy-Item $_.FullName $tempAssetsPath -ErrorAction SilentlyContinue
        }

        # Create manifest file
        $manifest = @"
TMP Font Asset Bundle - Version ${assetVersion}
Created: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
Contents: TextMesh Pro font assets and resources

Installation:
1. Extract this archive
2. Copy contents to your Unity project's Assets folder
3. Import TextMesh Pro package if not already installed

Note: This bundle contains placeholder content if no TMP assets were found in the libs directory.
"@
        $manifest | Out-File -FilePath "$tempAssetsPath/manifest.txt"

        # List contents for verification
        Write-Host "Contents of temp_assets directory:"
        Get-ChildItem -Path $tempAssetsPath -Recurse | ForEach-Object {
          Write-Host "  $($_.FullName.Replace((Get-Location).Path + '\', ''))"
        }

    - name: Create 7z Archive
      run: |
        $assetVersion = "${{ github.event.inputs.asset_version || '2025-05-12' }}"
        $outputPath = "dist/TMP_Font_AssetBundles_${assetVersion}.7z"
        $tempAssetsPath = "temp_assets"

        # Try to use 7z if available, otherwise use built-in compression
        if (Get-Command "7z" -ErrorAction SilentlyContinue) {
          Write-Host "Using 7z for compression..."
          & 7z a $outputPath "$tempAssetsPath/*"
        } else {
          Write-Host "7z not found, using PowerShell compression..."
          # Convert to zip format as fallback (since 7z is not available)
          $zipPath = $outputPath.Replace('.7z', '.zip')
          Compress-Archive -Path "$tempAssetsPath/*" -DestinationPath $zipPath -Force

          # Rename to 7z for consistency (optional)
          Move-Item $zipPath $outputPath -Force
        }

        # Verify archive was created
        if (Test-Path $outputPath) {
          $fileSize = (Get-Item $outputPath).Length
          Write-Host "Archive created successfully: $outputPath (Size: $([math]::Round($fileSize/1MB, 2)) MB)"
        } else {
          Write-Error "Failed to create archive"
          exit 1
        }

    - name: Clean up temp files
      run: |
        if (Test-Path "temp_assets") {
          Remove-Item "temp_assets" -Recurse -Force
        }

    - name: Upload font asset artifact
      uses: actions/upload-artifact@v4
      with:
        name: TMP_Font_AssetBundles-${{ github.event.inputs.asset_version || '2025-05-12' }}
        path: dist/TMP_Font_AssetBundles_${{ github.event.inputs.asset_version || '2025-05-12' }}.7z
        retention-days: 30

  release-font-assets:
    needs: build-font-assets
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download font assets
      uses: actions/download-artifact@v4
      with:
        name: TMP_Font_AssetBundles-${{ github.event.inputs.asset_version }}
        path: assets

    - name: Create Font Assets Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: fonts-${{ github.event.inputs.asset_version }}
        name: TMP Font Asset Bundles ${{ github.event.inputs.asset_version }}
        files: assets/TMP_Font_AssetBundles_${{ github.event.inputs.asset_version }}.7z
        body: |
          TMP (TextMesh Pro) Font Asset Bundles

          **Version:** ${{ github.event.inputs.asset_version }}
          **Created:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")

          This release contains TextMesh Pro font asset bundles for Unity projects.

          ## Contents
          - TextMesh Pro font files (.ttf, .otf)
          - Font settings and configurations
          - Font resources and materials

          ## Installation
          1. Extract the .7z file
          2. Copy the contents to your Unity project's Assets folder
          3. Import TextMesh Pro package if not already installed
          4. Configure fonts in your TextMesh Pro settings

          ## Notes
          - If no TMP assets were found during build, this bundle contains placeholder content
          - Please ensure you have the required TMP assets in the `libs/TextMesh Pro/` directory for future builds
        draft: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}